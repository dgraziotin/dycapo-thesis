#LyX 1.6.7 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass article
\begin_preamble
\usepackage[left,modulo]{lineno}
\end_preamble
\use_default_options true
\language english
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\float_placement H
\paperfontsize 11
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry true
\use_amsmath 1
\use_esint 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\leftmargin 3cm
\topmargin 3cm
\rightmargin 3cm
\bottommargin 3cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
thispagestyle{empty}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center

\size largest
Free University of Bolzano
\end_layout

\begin_layout Standard
\align center

\size largest
Faculty of Computer Science
\end_layout

\begin_layout Standard
\paragraph_spacing other 3
\align center
\begin_inset Graphics
	filename img/Unibz_Logo.png
	scale 40

\end_inset


\end_layout

\begin_layout Standard
\paragraph_spacing single
\align center

\size large
Thesis
\end_layout

\begin_layout Standard
\paragraph_spacing other 3
\align center

\size huge
Dycapo: On the creation of an open-source Server and a Protocol for Dynamic
 Carpooling
\end_layout

\begin_layout Standard
\align center

\size larger
Daniel Graziotin
\end_layout

\begin_layout Standard
\align center
Submitted in partial fulfillment of the requirements for the degree of Bachelor
 in Applied Computer Science at the Free University of Bolzano/Bozen 
\end_layout

\begin_layout Standard
\align center

\size larger
Thesis Advisor: Paolo Massa, Ph.D.
\end_layout

\begin_layout Standard
\align center

\size larger
October 2010
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
thispagestyle{empty}
\end_layout

\end_inset


\end_layout

\begin_layout Part*
Abstract
\end_layout

\begin_layout Standard
Using a private car is a transportation system very common in industrialized
 countries.
 However, it causes different problems such as overuse of oil, traffic jams
 causing earth pollution, health problems and an inefficient use of personal
 time.
 
\end_layout

\begin_layout Standard
One possible solution to these problems is carpooling, i.e.
 sharing a trip on a private car of a driver with one or more passengers.
 Carpooling would reduce the number of cars on streets hence providing worldwide
 environmental, economical and social benefits.
 The matching of drivers and passengers can be facilitated by information
 and communication technologies.
 Typically, a driver inserts on a web-site the availability of empty seats
 on his/her car for a planned trip and potential passengers can search for
 trips and contact the drivers.
 This process is slow and can be appropriate for long trips planned days
 in advance.
 We call this static carpooling and we note it is not used frequently by
 people even if there are already many web-sites offering this service and
 in fact the only real open challenge is widespread adoption.
\end_layout

\begin_layout Standard
Dynamic carpooling, on the other hand, takes advantage of the recent and
 increasing adoption of Internet-connected geo-aware mobile devices for
 enabling impromptu trip opportunities.
 Passengers request trips directly on the street and can find a suitable
 ride in just few minutes.
 Currently there are no dynamic carpooling systems widely used.
 While adoption is still a key issue, dynamic carpooling offers many open
 basic challenges related to the implementation of the technological infrastruct
ure.
 
\end_layout

\begin_layout Standard
This dissertation describes Dycapo, an open-source project for enabling
 dynamic carpooling services.
 After a review of the state of the art and a comparative analysis of dynamic
 carpooling issues, the two main components of the project are described,
 namely the protocol and the server.
 Dycapo Protocol is an open REST-based protocol for sharing trip information
 among dynamic carpooling clients and servers, taking inspiration from OpenTrip,
 a previously proposed data exchange format.
 Dycapo Server is a prototype providing web services for dynamic carpooling
 functionalities, implementing Dycapo Protocol.
 Our aim with the release of an open protocol and open source code is to
 provide a missing standard and platform that providers of dynamic carpooling
 services can adopt and extend.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
thispagestyle{empty}
\end_layout

\end_inset


\end_layout

\begin_layout Part*
Riassunto
\end_layout

\begin_layout Standard
Il veicolo privato è un sistema di trasporto molto diffuso nei Paesi industriali
zzati.
 Tuttavia questo utilizzo provoca diversi problemi, come ad esempio un uso
 eccessivo del petrolio e dei suoi derivati, un aumento della densità veicolare
 con conseguente incremento dell'inquinamento, problemi di salute e un uso
 inefficiente del proprio tempo.
\end_layout

\begin_layout Standard
Una possibile soluzione a questi problemi è il carpooling, ovvero la condivision
e di un viaggio su una macchina privata tra un conducente ed uno o più passegger
i.
 Il carpooling ridurrebbe il numero di auto sulle strade, fornendo quindi
 benefici ambientali, economici e sociali a livello mondiale.
 L'incontro tra conducenti e passeggeri può essere facilitato dalle tecnologie
 di informazione e comunicazione.
 L'autista, al momento di pianificare un viaggio, inserisce su un sito web
 la disponibilità di posti vuoti della sua auto per quel tragitto, i potenziali
 passeggeri, in caso di disponibilità di posti, possono così contattare
 l'autista e condividere il viaggio.
 Questo processo, essendo lento, può essere adeguato per lunghi viaggi,
 pianificati con giorni di anticipo.
 Il servizio sopracitato viene definito carpooling statico e nonostante
 numerosi siti offrano già questo servizio, il fenomeno non è largamente
 diffuso.
 Di fatto, l'unica vera sfida aperta è un'adozione massificata di questi
 servizi.
\end_layout

\begin_layout Standard
Il carpooling dinamico si avvale della recente adozione di dispositivi mobili,
 collegati ad Internet e con funzionalità di geo-localizzazione, offrendo
 così l'opportunità di creare viaggi in apparenza improvvisati.
 Le richieste del potenziale passeggero avvengono direttamente "on the road",
 permettendogli di trovare un passaggio ideale in breve tempo.
 L'adozione del carpooling dinamico per l'attuazione di infrastrutture tecnologi
che diventa quindi una sfida di importanza fondamentale.
\end_layout

\begin_layout Standard
Questa tesi descrive Dycapo, un progetto open-source ideato con lo scopo
 di abilitare servizi di carpooling dinamico.
 Dopo una rassegna dello stato dell'arte ed un'analisi comparativa delle
 problematiche legate al carpooling dinamico, descriviamo le due componenti
 principali del progetto, ovvero il protocollo ed il server.
 Dycapo Protocol è un protocollo aperto basato sull'architettura REST per
 la condivisione di informazioni di viaggio tra client e server, prendendo
 spunto dalla OpenTrip, un protocollo precedentemente proposto.
 Dycapo Server è invece un prototipo per fornire servizi di carpooling dinamico,
 che dimostra ed implementa il protocollo Dycapo Protocol.
 Il nostro obiettivo, con il rilascio di un protocollo aperto e codice open
 source, è di fornire una piattaforma standard mancante, che i fornitori
 di servizi di carpooling dinamico possano adottare ed estendere.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
thispagestyle{empty}
\end_layout

\end_inset


\end_layout

\begin_layout Part*
Kurzfassung
\end_layout

\begin_layout Standard
Das Nützen eines privaten Transportmittels ist in den heutigen industrialisierte
n Staaten sehr üblich.
 Das ergibt aber zahlreiche Probleme wie z.B hoher Kraftstoffverbrauch, Verkehrss
chlangen, Herzprobleme und eine ineffiziente Zeitnutzung.
\end_layout

\begin_layout Standard
Eine der möglichen Lösungen für diese Probleme ist „Carpooling“.
 Das bedeutet zum Beispiel das gemeinsame nutzen eines privaten Fahrzeuges
 mit ein oder mehrere Personen.
 Carpooling würde die Anzahl der Fahrzeuge drastisch reduzieren und somit
 weltweit soziale, ökonomische und umweltfreundliche Vorteile bringen.
 Die Anpassung und Paarung von Fahrern und Beifahrern kann mittels der neuen
 Informations- und Komunikationsaustauschtechnologien vereinfacht werden.
 Ein Fahrer kann womöglich die Anzahl der möglichen Beifahrer für seine
 geplante Reise eingeben und potenzielle Nutzer können diese somit finden
 und sich mit Ihm in Kontakt setzen.
 Dieser Prozess ist ziemlich lang und eignet sich für längere Reisen die
 von vornherein geplant sind.
 Diese Methode wird „statisches“ Carpooling genannt, hat jedoch trotz der
 zahlreichen Webseiten kein Erfolg.
\end_layout

\begin_layout Standard
„Dynamisches“ Carpooling jedoch basiert und erzielt Vorteil, von den immer
 mehr zunehmenden mit dem Internet verbundenen lokalisationsbewussten mobilen
 Geräten, die eine unmittelbare Reiseplanung ermöglichen.
 Beifahrer können Fahrziele direkt von überall abfragen und in nur einigen
 Minuten eine passende Mitfahrt finden.
 Zurzeit gibt es jedoch keine, im großen Ausmaß, benutzte dynamische Carpooling-
Systeme.
 Die größte Problematik liegt bei der persönlichen Aufnahme des Produkts,
 jedoch gibt es auch Probleme die die Realisierung der Technologischen Struktur
 umfassen.
\end_layout

\begin_layout Standard
Dieses Dokument beschreibt Dycapo, ein open-source Projekt, welches dynamische
 carpooling Dienste ermöglicht.
 Nach einer Analyse und Studie der dynamischen carpooling Problematiken,
 werden die zwei Hauptteile des Projekts beschrieben, nämlich das Protokoll
 und der Server.
 Das Dycapo-Protokoll ist ein open REST-basierendes Protokoll für den Austausch
 von Reiseinformationen zwischen dynamischen carpooling Clients und Servern,
 welches Inspiration aus OpenTrip, ein vorheriges vorgestelltes Protokoll
 genommen hat.
 Der Dycapo-Server ist ein Prototyp, welcher Webdienste für dynamische Carpoolin
g-Funktionalitäten, welche den Dycapo-Protokoll implementieren, zu Verfügung
 stellt.
 
\end_layout

\begin_layout Standard
Unser Ziel ist es mittels der Verbreitung eines offenen Protokolls und des
 open source Formats, einen zurzeit fehlenden Standard und Grundbaustein
 zu erstellen, welcher von anderen dynamischen carpooling Diensten angenommen
 und erweitert werden kann.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Part*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
thispagestyle{empty}
\end_layout

\end_inset


\end_layout

\begin_layout Part*
Acknowledgments
\end_layout

\begin_layout Standard
This project was carried out at the Fondazione Bruno Kessler, Trento, and
 would not have been possible without the support of my supervisor Paolo
 Massa, it has been a pleasure for me to work with him.
 I would like to thank in special all the people at the exploratory project
 SoNet for their support, with whom I had the opportunity to spend a great
 time, enjoy and learn a lot.
 Many thanks to Maurizio Napolitano for letting me know and enjoy this experienc
e at FBK.
\end_layout

\begin_layout Standard
\begin_inset space \space{}
\end_inset


\end_layout

\begin_layout Standard
Another big thank goes to the Computer Science staff, in particular to our
 Administrative Staff, for their willingness, professionalism and friendliness.
\end_layout

\begin_layout Standard
\begin_inset space \space{}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset space \space{}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset space \space{}
\end_inset


\end_layout

\begin_layout Standard
Ringrazio di cuore la mia famiglia per avermi permesso di arrivare a questo
 obiettivo, per essermi sempre stata accanto, avermi supportato e sopportato
 durante le sessioni di esame (e non solo), senza farmi mai mancare niente
 nella vita.
\end_layout

\begin_layout Standard
\begin_inset space \space{}
\end_inset


\end_layout

\begin_layout Standard
Grazie infine a tutti gli innumerevoli amici (qualcuno più speciale) che
 mi hanno accompagnato in questo percorso, di cui non posso elencare i nomi
 perchè necessiterebbero un'entrata in Appendice.
 Farò un'unica eccezione per Riccardo Buttarelli, che ha accettato di accompagna
rmi in questa avventura alla Fondazione Bruno Kessler, credere nella mia
 visione e sviluppare il suo progetto di tesi in sintonia con il mio.
 In bocca al lupo e grazie di tutto.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
thispagestyle{empty}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
thispagestyle{empty}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FloatList figure

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FloatList table

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
pagenumbering{arabic}
\end_layout

\end_inset


\end_layout

\begin_layout Part
Introduction
\end_layout

\begin_layout Standard
Using a private car is a transportation system very common in industrialized
 countries.
 Between 2004 and 2009, the worldwide production of private vehicles has
 been of 295 millions of new units 
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
(Accessed Sept.
 9 2010) http://oica.net/
\end_layout

\end_inset

 and, as of 2004, there were 199 millions registered drivers in the U.S.A.
\begin_inset Foot
status open

\begin_layout Plain Layout
 (Accessed Sept.
 9 2010) http://www.fhwa.dot.gov/ [U.S.
 Department of Transportation - Federal Highway Administration]
\end_layout

\end_inset

.
 Road transport is responsible for about 16% of man-made CO2 emissions
\begin_inset Foot
status open

\begin_layout Plain Layout
(Accessed Sept.
 9 2010) http://oica.net/ [Organisation Internationale des Constructeurs
 d’Automobile]
\end_layout

\end_inset

.
 
\end_layout

\begin_layout Standard
Private car travelling is a common but wasteful transportation system.
 Most cars are occupied by just one or two people.
 Average car occupancy in the U.K.
 is reported to be 1.59 persons/car, in Germany only 1.05 
\begin_inset CommandInset citation
LatexCommand cite
key "key-0"

\end_inset

.
 Private car travelling creates a number of different problems and societal
 costs worldwide.
 Environmentally, it is responsible for a wasteful use of a scarce and finite
 resource, i.e.
 oil, and causes unnecessary earth pollution.
 The traffic caused by single occupancy vehicles causes traffic jams and
 hugely increases the amount of time spent by people in queues on streets.
 This is a unsavvy use of another scarce resource: time.
 Moreover, the additional pollution creates health problems to millions
 of individuals.
 Lastly, lone drivers in separate cars miss opportunities to meet and talk,
 incurring in a loss of potential social capital.
\end_layout

\begin_layout Standard
One possible solution to all these problems is carpooling, i.e.
 the act of sharing a trip on a private vehicle between one or more other
 passengers.
 The shared use of a single car by two or more people would reduce the number
 of cars on streets.
 Carpooling helps the environment by allowing to use oil wisely, to reduce
 earth pollution and consequent health problems.
 It reduces traffic and - consequently - time that people spend in their
 cars.
 Carpooling has also the potential of increasing social capital by letting
 people meet and know each other.
\end_layout

\begin_layout Standard
Carpooling is not a widespread practice.
 There are already many systems facilitating the match between drivers and
 passengers, most of them in form of bulletin board-like web-sites.
 The intention of offering empty seats of a vehicle is usually announced
 by a driver many days before the start of the trip.
 The coordination between a driver and the passengers who are candidating
 for sharing the trip with him/her is usually carried out by e-mails or
 private messages in the web-site.
 
\end_layout

\begin_layout Standard
Therefore, we may see carpooling as a 
\emph on
static
\emph default
 way of sharing a trip.
\end_layout

\begin_layout Standard
The availability of geo-aware, mobile devices connected to the Internet
 opens up possibilities for the formation of carpools in short notice, directly
 on streets.
 This phenomenon is called dyamic carpooling (also known as dynamic ridesharing,
 instant ridesharing and agile ridesharing).
 Dan Kirshner, researcher in this field and maintainer of http://dynamicrideshar
ing.org website defines it as follows: 
\begin_inset Quotes eld
\end_inset

A system that facilitates the ability of drivers and passengers to make
 one-time ride matches close to their departure time, with sufficient convenienc
e and flexibility to be used on a daily basis.
\begin_inset Quotes erd
\end_inset


\begin_inset Foot
status open

\begin_layout Plain Layout
Kirshner, D.
 (Accessed Sept 5
\begin_inset Formula $^{\text{th}}$
\end_inset

 2010) - http://dynamicridesharing.org 
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
Currently there are no dynamic carpooling systems widely used.
 In fact, there are many problematic issues related to the implementation
 and the adoption of dynamic carpooling systems.
 We analyze them critically in Part II of this dissertation.
 While we acknowledge all aspects are critical, we claim that the basic
 technological infrastructure is an important required and key building
 block.
 In fact we decide to focus on the creation of a solid, open and collaborative
 base framework for dynamic carpooling.
 The design and implementation of an open protocol and an open-source server
 are presented in Part III.
 
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Part
State of the art
\end_layout

\begin_layout Standard
This part contains a summary of the state of the art regarding dynamic carpoolin
g.
 It is divided in three sections.
 In the first section there is a summary of previously published papers,
 in order of publication.
 Then we introduce a brief analysis of the deployed systems.
 In the last section we present the outcomes of the analysis of the whole
 state of the art and how we decided to move in order to provide a significant
 contribute in solving the problem of adopting dynamic ridesharing services.
\end_layout

\begin_layout Section
Review of published papers
\end_layout

\begin_layout Standard
During the research phase different papers were analyzed in order to obtain
 the state of the art.
 In this section we present a brief summary of each paper.
 
\end_layout

\begin_layout Subsubsection*
Sociotechnical support for Ride Sharing
\begin_inset CommandInset citation
LatexCommand cite
key "key-3"

\end_inset


\end_layout

\begin_layout Standard
This paper lists barriers to dynamic carpooling adoption and possible actions
 to reduce them.
 It reports about High Occupancy Vehicles (HOV) lane - which are lanes dedicated
 for people doing carpooling - on streets of San Francisco and Oakland and
 complains that there should be no fees on bridges for HOVs.
 The author suggests conventions developed between drivers and passengers
 (e.g.
 pickup points near public transportation stops).
 Regarding security, the paper suggests to give priority to female passengers,
 to not leave them alone waiting for a ride.
 The paper reports that there are no stories about rape, kidnapping or murder
 and the most common reported problem is bad driving.
\end_layout

\begin_layout Standard
There are suggestions on needed research: 
\end_layout

\begin_layout Itemize
Need of location-aware devices, because dynamic carpooling is actually limited
 to fixed pickups and drop-off locations.
 
\end_layout

\begin_layout Itemize
Simple user interfaces for passengers and drivers.
 
\end_layout

\begin_layout Itemize
Routing matching algorithms: short window of opportunity to match passenger
 and driver.
 
\end_layout

\begin_layout Itemize
Time-to-pickup algorithms: to help passenger decide whether to use carpooling
 or Public Transportation System.
 
\end_layout

\begin_layout Itemize
Safety and reputation system design: authenticate passenger and driver before
 making the match, monitor arrival at destination, feedback system.
 
\end_layout

\begin_layout Standard
The paper discusses about social capital impacts: there is the potential
 for creating new social connections and also matching drivers and passengers
 according to their profiles creates bridging across class, race and religious
 views.
\end_layout

\begin_layout Subsubsection*
Pilot Tests of Dynamic Ridesharing
\begin_inset CommandInset citation
LatexCommand cite
key "key-4"

\end_inset


\end_layout

\begin_layout Standard
The author presents three pilot tests done in the USA, all of them failed.
 The reasons of failure are the following: 
\end_layout

\begin_layout Itemize
Too complicated rules and user interface
\end_layout

\begin_layout Itemize
Too weak marketing effort
\end_layout

\begin_layout Itemize
Too few users.
 After 1 month, 1000 flyers distributed to the public and a proposed discount
 on parking, only 12 users were using the system.
 
\end_layout

\begin_layout Standard
The paper adds the idea of saving money when parking.
 It also enforces the idea of using social networks to allow car pooling
 on the fly.
 The author envisions using a web – and mobile service, also introducing
 some interesting user stories.
\end_layout

\begin_layout Subsubsection*
The smart Jitney: Rapid, Realistic Transport 
\begin_inset CommandInset citation
LatexCommand cite
key "key-5"

\end_inset


\end_layout

\begin_layout Standard
The paper focuses on environmental benefits of dynamic carpooling.
 It asserts that dynamic carpooling would lower greenhouse gas emissions
 in a better way than electric/hydrogen/hybrid cars would do.
 It introduces the idea of Smart Jitney: an unlicensed car driving on a
 defined route according to a schedule.
\end_layout

\begin_layout Standard
The author suggests the installation of Auto Event Recorders on cars, enforcing
 security.
 It complains that challenges are all focused in convincing the population
 to use the service, proposing a cooperative public development of the system.
\end_layout

\begin_layout Subsubsection*
Auction negotiation for mobile Rideshare service
\begin_inset CommandInset citation
LatexCommand cite
key "key-6"

\end_inset


\end_layout

\begin_layout Standard
The paper proposes the use of agent-based systems powered auction mechanisms
 for driver-passenger matching.
\end_layout

\begin_layout Subsubsection*
Casual Carpooling - enhanced
\begin_inset CommandInset citation
LatexCommand cite
key "key-10"

\end_inset


\end_layout

\begin_layout Standard
The author considers areas without HOV lanes and proposes the use of Radio
 Frequency IDentification (RFID) chips to quickly identify passengers and
 drivers.
 Readers should be installed at common pick-up points.
 The paper complains that it would cost less to pay passengers and drivers
 for using the service than to build a HOV lane.
\end_layout

\begin_layout Subsubsection*
Empty seats travelling
\begin_inset CommandInset citation
LatexCommand cite
key "key-0"

\end_inset


\end_layout

\begin_layout Standard
This white paper by Nokia suggests to use the phone as a mean of transportation,
 creating a value in terms of a transport opportunity.
 It points out some factors limiting static carpooling, arranged via websites:
 
\end_layout

\begin_layout Itemize
Trip arrangements are not ad hoc
\end_layout

\begin_layout Itemize
It is impossible to arrange trips to head home from work or to drive shopping.
 
\end_layout

\begin_layout Standard
The paper notices that people are not widely encouraged to practice carpooling
 by local governments.
 It collects obstacles and success factors in terms of human sentences,
 and their solution.
 The authors say that the challenge is in the definition of a path leading
 from existing ride share services to a fully automated system.
\end_layout

\begin_layout Subsubsection*
Interactive systems for real time dynamic multi hop carpooling
\begin_inset CommandInset citation
LatexCommand cite
key "key-11"

\end_inset


\end_layout

\begin_layout Standard
The author proposes a dynamic multi-hop system, by dividing a passenger
 route into smaller segments being part of other trips.
 The author claims that the problems of static carpooling are that matching
 drivers and passengers based on their destinations limits the number of
 possible rides, and with high waiting times.
 Carpooling is static and does not adapt itself well to ad hoc traveling.
 The paper asks governments to integrate carpooling in laws and to push
 for its use.
 The author complains that the perceived quality of service is increased
 even driving the passenger away from destination: a driver and a passenger
 should not be matched only if they share the same or similar destination
 because perfect matching would require high waiting times.
 
\end_layout

\begin_layout Standard
The paper also addresses social aspects: in a single trip with 3 hops a
 passenger might meet 3 to 10 people, therefore passengers may be socially
 matched.
 It suggests to link the application with some social networks like Facebook,
 MySpace and use profile information to match drivers and passengers.
 
\end_layout

\begin_layout Standard
As security improvement, the paper suggests: the use of finger-prints, RFID,
 voice signature, display the location of vehicles on a map, using user
 pictures, assigning random numbers to be used as passwords.
\end_layout

\begin_layout Subsubsection*
Instant Social Ride Sharing
\begin_inset CommandInset citation
LatexCommand cite
key "key-12"

\end_inset


\end_layout

\begin_layout Standard
The paper proposes matching methodologies based on both a minimization of
 detours and the maximization of social connections.
 It assumes the existence of a social network data source in which users
 are connected by means of groups, interests, etc.
 In such a network, the number of relatively short paths between a driver
 and a passenger indicates the strength of their social connection.
\end_layout

\begin_layout Standard
It provides algorithms and SQL queries.
 The authors assume that there is already a large scale of users, and no
 barriers to adoption are taken into account.
 
\end_layout

\begin_layout Subsubsection*
Combining Ridesharing & Social Networks
\begin_inset CommandInset citation
LatexCommand cite
key "key-13"

\end_inset


\end_layout

\begin_layout Standard
The author envisions a mobile and web system that interacts with social
 networks profiles that should improve security and trust by users.
 Users can register to the system in a traditional way (e.g., by giving email,
 username, password), then complete their profiles by linking their accounts
 to multiple existing social networks account, to fill the remaining fields.
 Otherwise, they have to fill the fields manually and verify their identity
 in more classical ways.
 The paper proposes Opensocial
\begin_inset Foot
status open

\begin_layout Plain Layout
Google, MySpace et al.
 (Accessed Sept.
 5
\begin_inset Formula $^{\text{th}}$
\end_inset

 2010) - http://www.opensocial.org/
\end_layout

\end_inset

 as connection interface.
 An own rating system is also complained, which keeps scores of persons.
 Amongst the criteria are factors like reliability, safety and friendliness.
 
\end_layout

\begin_layout Standard
It suggests the use of mobile systems, that should make use of GPS and creation
 of a match on the fly (real-time algorithms).
 The paper provides some results of surveys: people are willing to loose
 23% more time to pickup a friend of their social network rather than a
 stranger (6%).
 It also provides a high-level description of the system and implementation
 details.
 
\end_layout

\begin_layout Standard
The author asks for extra research on psychological factors that increase
 trust and perceived safety.
\end_layout

\begin_layout Subsubsection*
SafeRide: Reducing Single Occupancy Vehicles 
\begin_inset CommandInset citation
LatexCommand cite
key "key-14"

\end_inset


\end_layout

\begin_layout Standard
The publication is about a project in the U.S.A.
 It reports that there is a market-formation problem: to achieve the system
 that attracts passengers, there will have to be many drivers available.
 But the drivers will emerge only when it appears profitable or otherwise
 desiderable, and that depends on there being many passengers, etc.
 The author complains that someone must discover a winning formula before
 anyone will invest.
\end_layout

\begin_layout Standard
The paper lists some interesting user stories, as well as algorithms and
 requirements.
\end_layout

\begin_layout Subsubsection*
Current Trends in Dynamic Ridesharing, identification of Bottleneck Problems
 and Propositions of Solutions 
\begin_inset CommandInset citation
LatexCommand cite
key "key-15"

\end_inset


\end_layout

\begin_layout Standard
This paper reports a state of the art of dynamic carpooling.
 The authors review several papers about the topic and some applications.
 We used this publication as a base for identifying problematics and to
 avoid duplication of work.
 The authors also identify barriers against the adoption of dynamic carpooling
 systems and propose solutions.
 In our comparative analysis, presented in Section 3, we report different
 proposals than those presented in this paper.
 Our proposals are complementary to those reported by this paper and are
 more focused in technological aspects.
\end_layout

\begin_layout Section
Survey of deployed systems
\end_layout

\begin_layout Standard
After the theoretical research, also the existing systems were taken into
 consideration.
 The following list contains the existing dynamic carpooling applications
 and some static, web-based systems that are either innovative or well-known.
 All the reported websites were accessed on Sept.
 5
\begin_inset Formula $^{\text{th}}$
\end_inset

2010.
 Each text enclosed in double quotes is cited verbatim from the website
 of the application.
\end_layout

\begin_layout Subsubsection*
Carriva - https://www.carriva.org/MFC/app
\end_layout

\begin_layout Standard
It is a proprietary solution using phone calls as communication system and
 a fixed price of 0,10€ / km.
 Currently it has got 1118 active users.
 
\end_layout

\begin_layout Subsubsection*
Avego - http://www.avego.com
\end_layout

\begin_layout Standard
It is a proprietary application for Apple iPhone.
 It uses GPS technologies and presents a simple, intuitive user interface.
 It handles costs automatically.
 The passengers are not required to have an iPhone.
 It will offer information about public transports.
 The application relies on a proprietary service called Futurefleet, on
 which no implementation details are given.
 On October, 10
\begin_inset Formula $^{th}$
\end_inset

 2009 the service offered 5310 empty seats.
\end_layout

\begin_layout Subsubsection*
Carticipate - http://www.carticipate.com
\end_layout

\begin_layout Standard
Carticipate is a proprietary iPhone application that integrates with Facebook,
 defined as 
\begin_inset Quotes eld
\end_inset

a location based mobile social network for ride sharing, ride combining,
 and car pooling
\begin_inset Quotes erd
\end_inset

.
 It has a very simple interface looking like Google Maps mobile.
 According to the website, it is available on 59 countries.
\end_layout

\begin_layout Subsubsection*
Piggyback - http://www.piggybackmobile.com/
\end_layout

\begin_layout Standard
It is an Android application using a step-by-step approach (maximum one
 user input at each application screen) and makes wide use of graphical
 representations instead of text.
 It offers the possibility to bookmark addresses.
 The map screen is proprietary.
 When a driver and passengers are matched their compatibility is showed,
 represented with stars (0 to 5) and categorized as friendliness, reliability,
 driving skills and car.
 The trip cost is also showed.
 After the ride, the feedback system lets the user set the points for the
 aspects listed above.
 The application lets also plan rides using a static carpooling approach.
\end_layout

\begin_layout Subsubsection*
Aktalita - http://www.aktalita.com/
\end_layout

\begin_layout Standard
It is an under development application, supposed to be proprietary.
 
\end_layout

\begin_layout Standard
“Aktalita combines the Web, a geospatially enabled database, and a Java
 enabled cellphone to provide real-time dynamic carpooling between drivers
 and passengers”
\end_layout

\begin_layout Subsubsection*
RideGrid - http://www.highregardsoftware.com/ridegrid-dynamic-ridesharing.html
\end_layout

\begin_layout Standard
Ridegrid is another proprietary, not yet in production system.
 “RideGrid is a service that uses mobile Internet and location technology
 to enable individuals to obtain rides to and from any location, spontaneously.
 [..] RideGrid works by dynamically combining routes.
 We evaluate the change required in a driver's route such that it passes
 through the desired source and destination of a compatible rider, and broker
 the agreement.
 We have proprietary means to calculate the routes, monetize the transactions,
 and introduce people to others they trust.
 “
\end_layout

\begin_layout Standard
It uses an internal credit system.
 The client has an outdated classical Java Micro Edition interface.
\end_layout

\begin_layout Subsubsection*
Project Carpool - https://launchpad.net/carpool
\end_layout

\begin_layout Standard
Carpool was the only open-source project, using PHP and Javascript.
 The development was stuck at the research time.
 The project is now closed.
\end_layout

\begin_layout Subsubsection*
GoLoco - http://goloco.org/
\end_layout

\begin_layout Standard
GoLoco is a proprietary web application that also relies on Facebook.
 It uses a private payment system.
\end_layout

\begin_layout Subsubsection*
Ecolane DRT - http://www.ecolane.com/
\end_layout

\begin_layout Standard
Ir is a proprietary solution, web-based, focused on security.
 It provides a customized Nokia touchscreen device.
 Among the features, they declare that the device is capable of real-time
 data communication, reports of arrivals and departures with time information,
 device locking mechanisms, GPS location and direction, mileage tracking,
 detailed trip information.
 
\end_layout

\begin_layout Subsubsection*
Divide The Ride - http://www.dividetheride.com/
\end_layout

\begin_layout Standard
The project is a static, web-based solution organized around children activities.
 Families invite other trusted families to join their group.
 Groups get notifications when a ride is needed.
\end_layout

\begin_layout Subsubsection*
iCarpool - http://www.icarpool.com
\end_layout

\begin_layout Standard
This application is a static, web-based system that does not require payments.
 They declare to use advanced proprietary algorithms for ride matching.
 “High precision trip matching.
 helps you find the best carpool match.
 Find co-workers, neighbors and friends for carpool.
 Use for daily commute, recurring trips, long distance trips and events
 Plan ahead or use on-demand”.
 Matching criteria includes social relationships, but no details are given.
\end_layout

\begin_layout Subsubsection*
Hover - http://www.hoverport.org/
\end_layout

\begin_layout Standard
It is a casual carpooling system using RFID technologies and an own credit
 system.
 The members are approved after human verification tests.
 Participants must meet at a location called “Hover Park” and are identified
 by the RFID system.
 On exiting the Hover Park, the system recognizes driver and passengers
 and distributes credit points.
 There are several destination points available, that register the arrival
 in the same way.
 It also offer a guaranteed back-to-home system, by using taxis.
\end_layout

\begin_layout Subsubsection*
Flinc - http://www.flinc.mobi/
\end_layout

\begin_layout Standard
Flinc is a dynamic carpooling system using smartphones (Android and Apple
 iPhone).
 “Flinc connects navigation systems and mobile phones and arranges available
 seats within a few seconds - directly in the car and on the pavement.
 Flinc combines GPS and location-based capabilities with social networking
 to offer a dynamic and automated method of getting from one place to another.
 The service can be used on smartphones or on the PC or Mac, helping users
 create rides within a few seconds via an entirely automated process.”.
 The system is currently under active development.
\end_layout

\begin_layout Section
Comparative Analysis of Dynamic Carpooling Issues
\end_layout

\begin_layout Standard
The analysis of the state of the art brought some issues related to adopting
 dynamic carpooling systems, many of them recognized also by 
\begin_inset CommandInset citation
LatexCommand cite
key "key-15"

\end_inset

.
 We categorized the issues gathered from the state of the art and their
 proposals in the following categories:
\end_layout

\begin_layout Itemize
Interface Design - all issues related to graphical implementation of clients
 and ease of use
\end_layout

\begin_layout Itemize
Algorithms - the instructions regarding driver/passengers matching problems
\end_layout

\begin_layout Itemize
Coordination - the aspects related on how to let people meet, authenticate
 and coordinate.
\end_layout

\begin_layout Itemize
Trustiness - the problems related on raising user confidence on dynamic
 carpooling systems 
\end_layout

\begin_layout Itemize
Safety - the issues regarding ensuring protection of users
\end_layout

\begin_layout Itemize
Social Aspects - all the issues related to create social connections and
 raising social capital in dynamic carpooling systems 
\end_layout

\begin_layout Itemize
Reaching Critical Mass - the problems on reaching a sufficient amount of
 persons using the system that would attract more other people
\end_layout

\begin_layout Itemize
Incentives - all the political, motivational and economical issues related
 to dynamic ridesharing systems
\end_layout

\begin_layout Itemize
System Suggestions - everything else that we consider relevant for building
 dynamic carpooling systems
\end_layout

\begin_layout Standard
We attach the comparative analysis summarized in tables, in Appendix A,
 Table 2 up to table 6, for each category (columns), we list the suggestions
 and interesting points made in the different research papers (rows).
 Tables 2 to 6 in Appendix A is our contribution rationalizing the many
 problematic issues involved in the creation and deployment of dynamic carpoolin
g systems and in summarizing best practices and suggestions in how to deal
 with them.
\end_layout

\begin_layout Standard
Our rationalization of dynamic carpooling issues and possible solutions
 shows how dynamic carpooling systems still have many important open issues
 to be addressed and solved.
 This fact explains the current absence of any dynamic carpooling system
 deployed and used for real.
 We decided to address the overall challenge from a very core point of view
 and to focus on technical aspects.
 Among them, we observed that the source code of the projects and the prototypes
 produced was not freely accessible by the general public.
 There are no information regarding the servers, that are all proprietary
 and obscured.
 Another issue seems related to a missing standardization of the protocols
 used.
 Therefore, every project started from zero, 
\begin_inset Quotes eld
\end_inset

reinventing the wheel
\begin_inset Quotes erd
\end_inset

.
 While, in order to overcome the 
\begin_inset Quotes eld
\end_inset

reaching critical mass
\begin_inset Quotes erd
\end_inset

 issue, we believe that it is important that providers of dynamic carpooling
 services can exchange their data easily so that cross provider matching
 are possible.
 
\end_layout

\begin_layout Standard
Based on this analysis, we decided to create two basic technological building
 blocks:
\end_layout

\begin_layout Itemize
An open, discussable protocol for communication between dynamic (and static)
 carpooling systems
\end_layout

\begin_layout Itemize
An open-source server prototype implementing the protocol 
\end_layout

\begin_layout Standard
We decided to release the protocol under Creative Commons License and to
 release the source code as open-source because our goal is to fill a void
 and provide a basic infrastructure that future providers of dynamic carpooling
 services can adopt, extend and in general build on.
\end_layout

\begin_layout Standard
Therefore, the Dycapo project was born.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Part
Dynamic Carpooling Project: Dycapo
\end_layout

\begin_layout Section
Overview
\end_layout

\begin_layout Standard
Dycapo is the name given to a project aiming to share knowledge outcomes
 and technological products on dynamic carpooling.
 The information is created using a fully open and collaborative system.
 The website, http://dycapo.org, is the start point and the container of
 each project component.
 It is a Wiki, freely accessible and discussable.
 The Wiki content and the source code are available under permissive and
 open licenses.
 We used a blog and social networks to update in real-time about the status
 of the researches and the development.
 The website was opened on Oct.
 11 2009.
 As of Sept.
 11 2010 we had 1617 visits and many e-mail contacts, about proposals of
 collaboration and general interest.
 This approach is part of the strategy we chose to become a world standard
 for dynamic carpooling systems.
\end_layout

\begin_layout Standard
Dycapo Project is composed of four main parts:
\end_layout

\begin_layout Itemize
Research - this part is needed in order to understand the state of the art
 about dynamic carpooling.
\end_layout

\begin_layout Itemize
Protocol - a formal specification of the communication protocol we propose
 as a standard for the exchange of information among dynamic carpooling
 clients and services.
\end_layout

\begin_layout Itemize
Server - the prototype implementing dynamic carpooling functionalities and
 the protocol
\end_layout

\begin_layout Itemize
Client - will act as a start point for the clients implementing the protocol
\end_layout

\begin_layout Standard
The research part has been covered in Part II of this dissertation.
 A client is under development by a university colleague and will be object
 of another Bachelor thesis.
 Our analysis of the state of the art guided our decision to focus on technologi
cal aspects, precisely server and protocol.
\end_layout

\begin_layout Standard
In this section we first introduce some terminology related to our domain
 of interest.
 For the same reason, we then present two user stories on system functionalities.
 In the following sections we present a general architecture of Dycapo,
 the open protocol proposed as standard and the server prototype implementing
 the protocol and dynamic carpooling functionalities.
\end_layout

\begin_layout Subsection
Terminology
\end_layout

\begin_layout Standard
In Table 1 we introduce some key concepts used in both the protocol and
 the server for defining entities operating in the system.
 The remaining concepts will be explained in section 5.1.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="2">
<features>
<column alignment="center" valignment="top" width="0">
<column alignment="left" valignment="top" width="60text%">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Term
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Definition
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Person
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
A user registered in the system, with login and password
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Trip
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The Driver can create Trips in the system.
 A Trip is the information about the availability of seats in a car going
 from a certain location to a certain destination, driven by a Driver on
 a certain date
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Driver
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The role of a Person when he/she offers to share some seats on his/her car
 for a specific trip
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Passenger
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The role of a Person when he/she accepts to occupy a seat on a car of a
 Driver
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Participation
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The act of taking part into a Trip.
 The Driver participates by default in a Trip he/she created.
 A Passenger can participate in Trips created by a Driver.
 Participation can be just requested by the passenger or already confirmed
 by the driver.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Location
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
A geographical location.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Key Terms of Dycapo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Formal relationships such as the fact that a Trip can have more related
 participations, are summarized in the section about the internal working
 of the server, in Figure 12.
\end_layout

\begin_layout Subsection
User Stories
\end_layout

\begin_layout Standard
The following user stories are for introducing the reader in the domain
 of interest related to our dynamic carpooling protocol and server.
 For each user story, we specify in parentheses the appearance of terms
 introduced in Table 1.
\end_layout

\begin_layout Subsubsection*
A simple trip
\end_layout

\begin_layout Standard
Paul (a Person) is in Via Roma, Bolzano, Italy (a Location).
 He wants to move to the cemetery (a Location).
 He takes out his internet-enabled smart-phone with GPS activated, opens
 his Dycapo client and gives the desired destination, therefore searching
 for an available trip (and becoming a Passenger).
 Angela (a Driver) is travelling with her car along Corso Libertà, Bolzano
 (a Location).
 The destination of her previously stored trip is Laives, Italy, southern
 of the cimitery.
 She receives a notification from her Dycapo client running on her smartphone,
 located in a car docking station.
 The notification contains Paul's position and she accepts his participation
 (Participation) request.
 The client displays the directions for reaching Paul, using the GPS-chip
 .
 Paul (a Passenger) and Angela meet and share the trip.
\end_layout

\begin_layout Subsubsection*
A planned concert 
\end_layout

\begin_layout Standard
Anna lives in Trento, Italy (a Location).
 In two days she will attend a concert in Milano, Italy (a Location).
 She takes out her internet-enabled smart-phone running a Dycapo client
 and inputs her travel intentions, therefore creating a trip.
 Two days after she starts her trip.
 Just after her start, she discovers that Mary is in Rovereto, Italy (a
 Location) and would like to have a ride (a Participation) to Verona, Italy.
 The clients make them meet and share part of Anna trip.
 While driving Mary to Verona, Anna receives another ride request (a Participati
on) from John, who is in Brescia center, Italy and wants to travel to Milano,
 too.
 Anna realizes that the deviation from her planned route is too much and
 simply refuses the request (a Participation).
 Anna arrives to Milano and enjoys the concert.
\end_layout

\begin_layout Subsection
High-level architecture of the system
\end_layout

\begin_layout Standard
Dycapo system follows the client-server model, in which a server receives
 messages from clients (running on geo-aware mobile phones) using a protocol,
 processes them and returns them using the protocol again.
 In Figure 1 we can see three smartphones that, having a client software,
 communicate with Dycapo servers using the protocol.
 The server system operates the data received from the clients (e.g.
 performs matching between a Driver's trip and a Passenger search of a trip)
 and returns the results using the same protocol.
 
\end_layout

\begin_layout Standard
If the open protocol becomes a de-facto standard, the same client will be
 able to communicate with different servers, possibily operated by different
 operations.
 In this future scenario, server-to-server exchange of information is also
 possible, thanks to the protocol.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/architecture.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
High level view of Dycapo components architecture
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
Protocol
\end_layout

\begin_layout Standard
Dycapo Protocol (also known as DycapoP) is an open application-level protocol
 for enabling communication between dynamic (and static) carpooling servers
 and clients, using HTTP for operations and JSON (JavaScript Object Notation)
 as data exchange format.
 The protocol models are inspired by OpenTrip Core
\begin_inset Foot
status open

\begin_layout Plain Layout
http://opentrip.info/wiki/OpenTrip_Core
\end_layout

\end_inset

, a former proposal of data exchange format for carpooling and dynamic carpoolin
g presented during the MIT "Real-Time" Rideshare Research workshop
\begin_inset Foot
status open

\begin_layout Plain Layout
http://ridesharechoices.scripts.mit.edu/home/workshop/
\end_layout

\end_inset

.
 DycapoP is released under Creative Commons Attribution-ShareAlike 3.0 Unported
 license
\begin_inset Foot
status open

\begin_layout Plain Layout
http://creativecommons.org/licenses/by-sa/3.0/legalcode
\end_layout

\end_inset

 and documented at http://dycapo.org/Protocol.
 
\end_layout

\begin_layout Standard
The two main components of the protocol are: elements and operations.
 
\emph on
Elements
\emph default
 are the constructs to represent the entities involved in the protocol,
 for example a Person (as are Paul and Angela in the first user story) and
 a Location (as it is 
\begin_inset Quotes eld
\end_inset

Via Roma, Bolzano, Italy
\begin_inset Quotes erd
\end_inset

 in the first user story).
 
\emph on
Operations
\emph default
 are the actions that clients can perform on the elements to obtain desired
 results.
 As example, the 
\begin_inset Quotes eld
\end_inset

searching a trip
\begin_inset Quotes erd
\end_inset

 action performed by Paul in the first user story and 
\begin_inset Quotes eld
\end_inset

Anna [..] refuses the request
\begin_inset Quotes erd
\end_inset

 are translated as protocol operations.
\end_layout

\begin_layout Subsection
Elements
\end_layout

\begin_layout Standard
The elements defined by OpenTrip Core (using Atom Syndication
\begin_inset Foot
status open

\begin_layout Plain Layout
http://www.ietf.org/rfc/rfc4287.txt
\end_layout

\end_inset

 format) have been extracted and represented using UML 2.1 Class Diagrams.
 While proceeding and discussing the development of the server, those elements
 were extended and adapted.
 The elements are represented in the Protocol using descriptive tables and
 real world code snippets.
 The Dycapo Protocol draft version of 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
today
\end_layout

\end_inset

 
\begin_inset space \space{}
\end_inset

is included in the Appendix B.
 Each element has a 
\emph on
href
\emph default
 attribute, that holds the unique URL for doing operations on the resource.
 It will be further explained in sub-section 5.2.
\end_layout

\begin_layout Standard
The following are the elements of Dycapo Protocol:
\end_layout

\begin_layout Paragraph
Location
\end_layout

\begin_layout Standard
A Location (Figure 2) represents a geographical position, using human understand
able attributes (like 
\emph on
street
\emph default
, 
\emph on
town
\emph default
, 
\emph on
postcode
\emph default
, 
\emph on
region
\emph default
, 
\emph on
subregion
\emph default
 and 
\emph on
country
\emph default
) or geolocation values such as 
\emph on
georss_point
\emph default

\begin_inset Foot
status open

\begin_layout Plain Layout
http://www.georss.org/simple#Point
\end_layout

\end_inset

.
 
\end_layout

\begin_layout Standard
The 
\emph on
leaves
\emph default
 attribute is responsible for holding time-based information.
 It is used for indicating the left of a location when starting a trip or
 a ride.
 It is also used for holding the timestamp of the location of a Person and
 the predicted arrival at a place.
\end_layout

\begin_layout Paragraph
Person
\end_layout

\begin_layout Standard
A Person (Figure 3) represents a user of the system and contains useful
 information for building social connections or search preferences.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
width "45col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/location.jpg
	scale 80

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Location Element
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
width "45col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/person.jpg
	scale 80

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Person Element
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Modality
\end_layout

\begin_layout Standard
A Modality (Figure 4) element is a description of the mode of transportation
 being used by the Person offering a Trip and a representation for the cost
 of the Trip.
 
\end_layout

\begin_layout Paragraph
Preferences
\end_layout

\begin_layout Standard
A Preferences (Figure 5) element represents the preferences of the Driver
 when performing a Trip, such as the age range of the Persons he will accept
 as passengers, whether they can smoke during the Trip, etc.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
width "45col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/modality.jpg
	scale 80

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Modality Element
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
width "45col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/preferences.jpg
	scale 80

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Preferences Element
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Participation
\end_layout

\begin_layout Standard
A Participation (Figure 6) element represents the fact of taking part in
 a Trip.
 The attribute 
\emph on
status
\emph default
 represents the status of a Participation, being it a request, a refuse,
 a start etc.
 This element is a central part of DycapoP, as it is used since the beginning
 to end of a ride of a Passenger.
 The majority of the operations of the protocol are built around a Participation
 element.
\end_layout

\begin_layout Paragraph
Trip
\end_layout

\begin_layout Standard
A Trip (Figure 7) represents a single course of travel taken as part of
 one's duty, work, etc, offered by a Person.
 It is the most complex object of the Dycapo Protocol.
 It contains all the information needed for doing operations with Trips.
 Following the philosophy behind OpenTrip's Trip element, it contains datestamp
 information such as 
\emph on
published
\emph default
, 
\emph on
updated
\emph default
 and 
\emph on
expires
\emph default
, respectively representing the creation, the last edit and the expiration
 of the trip.
 A Trip contains other Dycapo Protocol elements such as the 
\emph on
modality
\emph default
 and the 
\emph on
preferences
\emph default
, explained above.
 The 
\emph on
locations
\emph default
 element is an array of Location objects, and holds the start, the end and
 all the intermediate geographical points of the trip.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
width "50col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/participation.jpg
	scale 80

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Participation Element
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
width "50col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/trip.jpg
	scale 80

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Trip Element
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Search
\end_layout

\begin_layout Standard
A query to the server when a passenger searches an available trip is represented
 by a Search element (Figure 8).
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/search.jpg
	scale 80

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Search Element
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Attributes of elements can be mandatory or optional.
 The specific settings for each entity are described in the complete protocol
 at Appendix B.
\end_layout

\begin_layout Subsection
Operations
\end_layout

\begin_layout Standard
DycapoP is implemented using a resource oriented architecture, i.e.
 the definition of a full REST-based 
\begin_inset CommandInset citation
LatexCommand cite
key "key-1"

\end_inset

 application-level protocol.
 That is, all DycapoP elements are represented as web resources encoded
 in JSON exchange format.
 Each element is referenced through a unique URL, stored in their 
\emph on
href
\emph default
 attribute.
 All the operations of the protocol are implemented and performed using
 HTTP methods, i.e.
 GET, POST, PUT, DELETE of resources.
 As 
\end_layout

\begin_layout Standard
For example, to retrieve a particular trip, a client must perform the following
 HTTP request:
\end_layout

\begin_layout LyX-Code
GET /api/trips/3/ HTTP/1.1 
\end_layout

\begin_layout LyX-Code
Authorization: Basic cmlkZXIxOnBhc3N3b3Jk 
\end_layout

\begin_layout LyX-Code
Host: test.dycapo.org 
\end_layout

\begin_layout Standard
It is self-descriptive: a GET against the collection namespace of trips,
 specifying in the URL that we want to retrieve the Trip with id 3, using
 HTTP version 1.1.
 The authorization line is present because in our implementation of the
 protocol the authorization is done using HTTP Basic Authentication
\begin_inset Foot
status open

\begin_layout Plain Layout
http://www.ietf.org/rfc/rfc2617.txt
\end_layout

\end_inset

.
 The Host part is required by HTTP version 1.1.
\end_layout

\begin_layout Standard
The server will respond in the following way, using a HTTP response.
\end_layout

\begin_layout LyX-Code
HTTP/1.1 200 OK
\end_layout

\begin_layout LyX-Code
Date: Mon, 13 Sep 2010 14:35:26 GMT
\end_layout

\begin_layout LyX-Code
Server: Apache/2.2.14 (Unix) mod_ssl/2.2.14 [..]
\end_layout

\begin_layout LyX-Code
Vary: Authorization,Cookie 
\end_layout

\begin_layout LyX-Code
Transfer-Encoding: chunked 
\end_layout

\begin_layout LyX-Code
Content-Type: application/json; charset=utf-8 
\end_layout

\begin_layout LyX-Code
X-Pad: avoid browser bug
\end_layout

\begin_layout LyX-Code
922
\end_layout

\begin_layout LyX-Code
{ 
\end_layout

\begin_layout LyX-Code
"updated": "2010-09-02 16:03:24", 
\end_layout

\begin_layout LyX-Code
"participations": { 
\end_layout

\begin_deeper
\begin_layout LyX-Code
"href": "http://test.dycapo.org/api/trips/3/participations/"
\end_layout

\begin_layout LyX-Code
},
\end_layout

\end_deeper
\begin_layout LyX-Code
"preferences": { 
\end_layout

\begin_deeper
\begin_layout LyX-Code
"nonsmoking": false,
\end_layout

\begin_layout LyX-Code
"gender": "", 
\end_layout

\begin_layout LyX-Code
"ride": false,
\end_layout

\begin_layout LyX-Code
"drive": false,
\end_layout

\begin_layout LyX-Code
"href": "http://test.dycapo.org/api/trips/4/preferences/",
\end_layout

\begin_layout LyX-Code
"age": "18-30"
\end_layout

\end_deeper
\begin_layout LyX-Code
},
\end_layout

\begin_layout LyX-Code
"author": { 
\end_layout

\begin_deeper
\begin_layout LyX-Code
"username": "driver1",
\end_layout

\begin_layout LyX-Code
"gender": "M",
\end_layout

\begin_layout LyX-Code
"href": "http://test.dycapo.org/api/persons/driver1/" 
\end_layout

\end_deeper
\begin_layout LyX-Code
},
\end_layout

\begin_layout LyX-Code
"expires": "2010-09-05 16:03:05", 
\end_layout

\begin_layout LyX-Code
"locations": [ { 
\end_layout

\begin_deeper
\begin_layout LyX-Code
"town": "Bolzano", 
\end_layout

\begin_layout LyX-Code
"point": "orig", 
\end_layout

\begin_layout LyX-Code
"href": "http://test.dycapo.org/api/trips/3/locations/",
\end_layout

\begin_layout LyX-Code
"country": "",
\end_layout

\begin_layout LyX-Code
"region": "",
\end_layout

\begin_layout LyX-Code
"subregion": "",
\end_layout

\begin_layout LyX-Code
"days": "",
\end_layout

\begin_layout LyX-Code
"label": "Work",
\end_layout

\begin_layout LyX-Code
"street": "Rom Strasse",
\end_layout

\begin_layout LyX-Code
"postcode": 39100,
\end_layout

\begin_layout LyX-Code
"offset": 150,
\end_layout

\begin_layout LyX-Code
"leaves": "2010-09-02 16:02:22", 
\end_layout

\begin_layout LyX-Code
"recurs": "", 
\end_layout

\begin_layout LyX-Code
"georss_point": "46.490200 11.342294"
\end_layout

\end_deeper
\begin_layout LyX-Code
}, { 
\end_layout

\begin_deeper
\begin_layout LyX-Code
"town": "Bolzano",
\end_layout

\begin_layout LyX-Code
"point": "dest",
\end_layout

\begin_layout LyX-Code
"href": "http://test.dycapo.org/api/trips/3/locations/",
\end_layout

\begin_layout LyX-Code
"country": "", 
\end_layout

\begin_layout LyX-Code
"region": "",
\end_layout

\begin_layout LyX-Code
"subregion": "", 
\end_layout

\begin_layout LyX-Code
"days": "", 
\end_layout

\begin_layout LyX-Code
"label": "Work",
\end_layout

\begin_layout LyX-Code
"street": "Piazza della Vittoria, 1",
\end_layout

\begin_layout LyX-Code
"postcode": 39100,
\end_layout

\begin_layout LyX-Code
"offset": 150,
\end_layout

\begin_layout LyX-Code
"leaves": "2010-09-02 16:02:22",
\end_layout

\begin_layout LyX-Code
"recurs": "",
\end_layout

\begin_layout LyX-Code
"georss_point": "46.500740 11.345073"
\end_layout

\end_deeper
\begin_layout LyX-Code
} ],
\end_layout

\begin_layout LyX-Code
"href": "http://test.dycapo.org/api/trips/3/", 
\end_layout

\begin_layout LyX-Code
"published": "2010-09-02 16:03:05", 
\end_layout

\begin_layout LyX-Code
"modality": { 
\end_layout

\begin_deeper
\begin_layout LyX-Code
"kind": "auto",
\end_layout

\begin_layout LyX-Code
"capacity": 4,
\end_layout

\begin_layout LyX-Code
"lic": "",
\end_layout

\begin_layout LyX-Code
"color": "",
\end_layout

\begin_layout LyX-Code
"make": "Ford",
\end_layout

\begin_layout LyX-Code
"vacancy": 1,
\end_layout

\begin_layout LyX-Code
"cost": 0.0, 
\end_layout

\begin_layout LyX-Code
"href": "http://test.dycapo.org/api/trips/3/modality/",
\end_layout

\begin_layout LyX-Code
"year": 0, 
\end_layout

\begin_layout LyX-Code
"model_name": "Fiesta" 
\end_layout

\begin_layout LyX-Code
} 
\end_layout

\end_deeper
\begin_layout LyX-Code
}
\end_layout

\begin_layout Standard
The first lines are common HTTP response parts.
 The status line is a HTTP 200 OK, specifying that the request has been
 successful.
 The Content-Type header informs that the server is returning in JSON format
 that we now briefly analyze.
 What is returned in this example is a Trip object, enclosed in curly brackets.
 Each Trip attribute is in the form of: 
\emph on

\begin_inset Quotes eld
\end_inset

attribute name
\begin_inset Quotes erd
\end_inset

 : attribute-value
\emph default
.
 All attributes are separated by a comma.
 Some members have simple value types like boolean, number and string, e.g.
 
\emph on
published
\emph default
, 
\emph on
href
\emph default
.
 Other attributes have complex objects as values, e.g.
 
\emph on
modality
\emph default
, 
\emph on
preferences
\emph default
.
 The 
\emph on
locations
\emph default
 attribute is represented as an array of Location elements, enclosed in
 square brackets.
\end_layout

\begin_layout Standard
The protocol operations are available in Appendix B.
 This dissertation focuses on the implementation of the functionalities
 in Part IV.
\end_layout

\begin_layout Standard
In Figure 9 we represent what we expect by clients when operating on a Participa
tion element, using a UML State Diagram.
 For each transition, we report the value of attribute 
\emph on
status
\emph default
 and the HTTP method performed by the operation.
 We also report those transitions that only the author of the Trip (i.e.
 the driver) can cause.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/Driver_Passenger_Participation_states.jpeg
	scale 75

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Participation Status
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The UML 2.1 sequence diagram in Figure 10 summarizes a full user story -
 the creation of a Trip, the participation of a passenger and its end.
 We comment the first passages, up to the passenger ride request is accepted.
\end_layout

\begin_layout Standard
To create a Trip in Dycapo system, the driver client performs a HTTP POST
 operation of a Trip element against the URL (Message 1 in Figure 10).
 The POST request contains in its body the representation of the Trip (Figure
 7) element using JSON notation.
 The server responds using a HTTP 201 Created message, returning in the
 response body the same Trip representation with an additional 
\emph on
href
\emph default
 attribute containing the unique URL for future accessing the stored resource.
 The passenger searches a trip by doing a POST request (Message 2 in Figure
 10) containing in its body a representation in JSON of a Search (Figure
 9) element.
 The server returns a HTTP 201 Created response with the Search element
 in its body, providing in the 
\emph on
href
\emph default
 attribute the URL for accessing the resource.
 In Message 4 the driver sets the Trip as active by doing a PUT request
 against the Trip previously stored, passing the updated Trip element.
 Afterwards, as illustrated in Message 5, the passenger retrieves the Search
 resource using a GET request against the unique URL of the Search resource,
 that will contain the Trip inserted by the driver.
 The passenger then requests a ride by posting a Participation element (Message
 6) using the participations URL provided by the Trip element.
 The driver accepts the ride request by obtaining the participations of
 the Trip (Message 7) using a GET request, retrieving the passenger participatio
n, modifying its status attribute to 
\begin_inset Quotes eld
\end_inset


\emph on
accept
\emph default

\begin_inset Quotes erd
\end_inset

 and updating it using a PUT request.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/Simple_Dycapo_interaction.jpg
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Interaction of two clients and Dycapo Server using Dycapo Protocol
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Server
\end_layout

\begin_layout Standard
Dycapo Server (also known as DycapoS) is a software built using first throwaway
 then evolutionary prototyping - as defined by 
\begin_inset CommandInset citation
LatexCommand cite
key "key-2"

\end_inset

 - to demonstrate and support the definition of a standard protocol for
 dynamic carpooling.
 In this part we describe the software components, the enabling technologies,
 the models and the functionalities.
\end_layout

\begin_layout Standard
DycapoS source-code is available in an open GIT repository 
\begin_inset Foot
status open

\begin_layout Plain Layout
http://github.com/BodomLx/dycapo
\end_layout

\end_inset

, under the Apache License, version 2.0
\begin_inset Foot
status open

\begin_layout Plain Layout
http://www.apache.org/licenses/LICENSE-2.0.html
\end_layout

\end_inset

.
 The project was opened on Nov.
 14 2009 and as of 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
today
\end_layout

\end_inset


\begin_inset space \space{}
\end_inset

 counts 177 commits, 14 git tags and 5 branches.
 
\end_layout

\begin_layout Subsection
Enabling Technologies
\end_layout

\begin_layout Standard
DycapoS makes use of several open-source systems for achieve its goals.
 We list them in this sub-section.
\end_layout

\begin_layout Itemize
Python programming language and Django web framework
\begin_inset Foot
status open

\begin_layout Plain Layout
(Accessed Sept.
 22 2010) http://djangoproject.com
\end_layout

\end_inset

.
 Python is a general-purpose high-level and multi paradigm programming language,
 known for a human understandable, clear syntax.
 Django is a web framework following the Model-View-Controller architectural
 pattern.
 Even if Django is focused on a rapid creation of rich-content web-sites,
 its openness let the community create add-ons for different purposes, as
 it is in our case.
 DycapoS uses the following components of Django:
\end_layout

\begin_deeper
\begin_layout Itemize
The object-relational mapper - that operates between Python objects, defined
 as classes, and a relational database, letting developers operate at object
 level instead of writing SQL queries.
\end_layout

\begin_layout Itemize
The regular-expression-based URL dispatcher.
\end_layout

\begin_layout Itemize
The authentication system that easily provides wrappers for doing HTTP basic
 authentication against stored users.
\end_layout

\end_deeper
\begin_layout Itemize
Geopy
\begin_inset Foot
status open

\begin_layout Plain Layout
(Accessed Sept.
 22 2010) http://code.google.com/p/geopy/
\end_layout

\end_inset

, a geocoding library for Python programming language that helps to locate
 the coordinates of addresses across the world using third-party geocoders
 services.
 It also provides reverse geocoding functionalities, i.e.
 the retrieval of human-understandable data of a physical location, starting
 from its coordinates.
\end_layout

\begin_layout Itemize
Piston
\begin_inset Foot
status open

\begin_layout Plain Layout
(Accessed Sept.
 22 2010) http://bitbucket.org/jespern/django-piston/wiki/Home
\end_layout

\end_inset

, a Django add-on that provides the creation of RESTful APIs.
\end_layout

\begin_layout Itemize
Py.test
\begin_inset Foot
status open

\begin_layout Plain Layout
(Accessed Sept.
 22 2010) http://codespeak.net/py/dist/test/
\end_layout

\end_inset

, a mature unit-testing framework for Python programming language
\end_layout

\begin_layout Itemize
Apache webserver and PostgreSQL database management system.
\end_layout

\begin_layout Subsection
Components
\end_layout

\begin_layout Standard
Dycapo Server is written using Python programming language, which allows
 a partitioning of a software into modules and packages.
 A module is a component providing execution statements and definition of
 functions, variables, classes, etc.
 Each module correspond to a single Python file.
 A module has its own private symbol table.
 A package is a set of modules or other sub-packages, implemented as a directory.
 Dycapo Server is organized using separation of concerns, each concern held
 in a separate package.
 
\end_layout

\begin_layout Standard
We represent in Figure 11 a high-level overview of Dycapo Server components,
 here described:
\end_layout

\begin_layout Itemize
rest - this module holds all the wrappers of the resources exposed to the
 public using REST architecture.
 It contains a Python module for each DycapoP element, that defines behaviors
 to perform depending on the HTTP request done by clients.
 That is, each Python module contains a class defining behaviors to be done
 for each HTTP operation implemented.
\end_layout

\begin_layout Itemize
piston - this module contains an open-source framework that lets us create
 application programming interfaces implemented with REST principles.
\end_layout

\begin_layout Itemize
server - in this module we implemented the server functionalities and models.
 See sub-sections 6.3 and 6.4 for more information
\end_layout

\begin_layout Itemize
geopy - in this module we have a geocoding library for Python for our matching
 algorithm and for completing Location objects when received from clients.
\end_layout

\begin_layout Itemize
tests - in this module we have a full testing suite of REST functionalities
 (and therefore, the server internal functionalities).
 Actually, a full test run performs 199 HTTP requests doing multiple asserts
 on each call.
\end_layout

\begin_layout Standard
A HTTP request to the webserver connected to the Internet is wrapped by
 our Python web framework as a Python object.
 The requested URL is evaluated by an internal dispatcher that passes the
 control to the rest package.
 The 
\emph on
rest
\emph default
 package converts the resource representation provided to a Python object
 defined in the 
\emph on
server
\emph default
 module.
 Then it performs some actions and computation by calling a component of
 the 
\emph on
server
\emph default
 module.
 The 
\emph on
server
\emph default
 module eventually saves or retrieves states by querying the database and
 returns results, that are again converted by the 
\emph on
rest
\emph default
 package in JSON format and returned by the web server.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/Dycapo_Server_components.jpg
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Dycapo Server components
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Models
\end_layout

\begin_layout Standard
Dycapo Server models are developed as Python classes and trace the elements
 of Dycapo Protocol.
 They are stored in the models sub-package inside the 
\emph on
server
\emph default
 package.
 Since we already mentioned them in Section 5.1, we include in Figure 12
 a UML 2.1 Class diagram to represent them and their relations.
 
\end_layout

\begin_layout Standard
The slight differences in their Python implementations are in their data
 type, that are a specialization of the data type of DycapoP attributes.
 There are other tiny differences.
 For example, we have separate attributes in Location for GeoRSS longitude
 and latitude, for facilitating database queries.
 
\end_layout

\begin_layout Standard
In Figure 12 we also have a Response class, with a yellow background.
 Response is a special object type used internally in DycapoS for wrapping
 return values and exceptions.
 Its attribute 
\emph on
code
\emph default
 is for representing statuses, using HTTP status codes.
 Attribute 
\emph on
type
\emph default
 is a helper attribute to include the type of the object returned by functions,
 or exception.
 The attribute 
\emph on
value 
\emph default
holds the value returned from functions, and can be of any Python type.
\end_layout

\begin_layout Standard
The Participation class is the only one which is completely different when
 compared to the one in DycapoP (Figure 6).
 Its implementation is more complex because we decided to implement the
 status as a set of boolean values, for facilitating database queries.
 Through a helper method, the combinations of the boolean values are translated
 to the human-understandable strings of the 
\emph on
status
\emph default
 attribute of the Participation element of DycapoP (Figure 9).
\end_layout

\begin_layout Standard
Moreover, we store important safety-related data for each Participation
 statuses, that are the timestamp and the Person location related to the
 change of status.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/Design-class_diagram.jpg
	scale 50
	rotateAngle 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Dycapo Server class diagram
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Functionalities
\end_layout

\begin_layout Standard
All the functionalities of DycapoS are stored in packages as pure functions,
 inside the server module.
 They are divided in five packages, according to a separation of concerns
 division.
 In this sub-section we list the functionalities, we include a short comment
 on what they perform and we provide how they are generally used by REST
 operations.
\end_layout

\begin_layout Subsubsection*
Common
\end_layout

\begin_layout Standard
This package contains all the functions that a driver and a passenger have
 in common.
 That is, all the operations regarding geographical position, registration
 and profile changes are in the common package.
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

setPosition(current_user, position) 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
It verifies the validity of the Location object, then links it to the given
 Person, as current Person position and/or Participation location depending
 whether the person is participating to a Trip or not.
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

getPosition(current_user, person)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
It verifies the privacy-related permissions of both users given - the first
 one requesting the position of the second one, then eventually returns
 the location of the Person.
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

register(person)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This function registers a Person to the system.
 
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

updatePerson(current_user, person)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
It updates current_user Person with the attributes of person Person.
 We use this function for user profile changes.
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

changePassword(person)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
It changes the password of the user, supplied in person.password 
\end_layout

\begin_layout Subsubsection*
Driver
\end_layout

\begin_layout Standard
In the driver package we implemented all the functionalities needed by a
 Person when he/she assumes the role of a driver.
 That is, all the operations regarding the manipulation of Trips and acceptation
/refusal of Trip Participation are developed in this package.
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

insertTrip(trip, author, source, destination, modality, preferences)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This function inserts a Trip in the system.
 It may be either started or not.
 It also checks the validity of each object supplied 
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

startTrip(trip, driver)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
It sets a Trip as started.
 
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

getRides(trip, driver)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This function returns all pending ride requests for a trip 
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

acceptRide(trip, driver, passenger)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
It accepts a ride request of a passenger
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

refuseRide(trip, passenger)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This function refuses a ride request of a passenger 
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

finishTrip(trip, driver)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
It sets a Trip as finished.
 
\end_layout

\begin_layout Subsubsection*
Passenger
\end_layout

\begin_layout Standard
This package contains the functionalities needed by a Person when he/she
 assumes the role of a passenger.
 That is, all the operations regarding the search of a Trip, the request/cancell
ation/start/end of a Participation are implemented in this package.
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

searchRide(source, destination, passenger)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Given a source, a destination and the passenger, this function searches
 for a suitable active Trip.
 
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

requestRide(trip, passenger)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
It sends a request for a ride to the Trip author.
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

statusRide(trip, passenger)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
It returns the status of the Participation related to the Person passenger.
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

cancelRide(trip, passenger)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This function deletes a ride previously requested by a passenger.
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

startRide(trip, passenger)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
It lets the system know that a ride successfully started, i.e.
 the driver has arrived to pick the passenger 
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

finishRide(trip, passenger)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
It lets the system know that a ride successfully finished, i.e.
 the Passenger has arrived to destination 
\end_layout

\begin_layout Subsubsection*
Matching
\end_layout

\begin_layout Standard
We created the matching package separated from the passenger package for
 better handling its functionalities.
 This package holds the matching algorithm of Persons when a Trip is searched.
 The current matching algorithm has been implemented ex-novo by this dissertatio
n author.
 It is based on air distances, not on real routing vector.
 It is considered suitable for testing the server prototype by a tiny community
 of conscious volunteers but not for real-world usage.
 The algorithm is heavily tested by the testing framework of DycapoS.
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

search_ride(location, passenger) 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This function returns all the Trips with a destination near a given location,
 by creating a virtual geographical box around the location.
 We query the database for all active Trips, that also have seats available,
 searching a destination that is inside this box.
 The retrieved trips are then filtered by looking if the driver air position
 from the destination is greater than the passenger position.
 Then, the remaining trips are filtered by calculating if the driver tends
 to move approaching the passenger position or to move away from him/her.
 The remaining trips are returned by the function.
 See the remaining helper functions for more information.
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

get_proximity_factor(person, position)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Given a person and a location, this function determines if the person is
 approaching it or getting away from it, by retrieving some recent locations
 of the person and computing their distance from the location.
 The set of ordered distances is then passed to location_proximity_factor
 that retrieves the proximity factor.
 
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

location_proximity_factor(distances)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Given a list of distances, it computes the approaching factor which is a
 natural number in the interval (-inf , +inf).
 If the factor is greater than 0, the numbers in list tend to decrease and
 therefore, the driver is approaching the passenger.
 If the factor is 0, the numbers in list tend to stay around the same value
 and therefore, the driver is neither approaching nor moving away from the
 passenger.
 If the factor is less than 0, the numbers in list tend to increase and
 therefore the driver is moving away from the passenger.
\end_layout

\begin_layout Subsubsection*
Utils
\end_layout

\begin_layout Standard
This package holds some utility functions related to time and object's attribute
 synchronization.
\end_layout

\begin_layout Subsubsection*
REST to Server mapping
\end_layout

\begin_layout Standard
DycapoS is built over a resource-oriented architecture (that is REST) but
 internally implements functions as if it was a service-oriented architecture.
 As we introduced in sub-section 6.1, a HTTP request is dispatched to the
 
\emph on
rest
\emph default
 package, that contains the handlers responsible for react to the requests
 according to the HTTP method used.
 The handler overrides up to four methods, one for each HTTP method available.
 The method is responsible for calling the correct function inside the 
\emph on
server
\emph default
 package and return its results.
\end_layout

\begin_layout Standard
As example, we consider the most simple handler of DycapoS, that is the
 Location handler for Person's locations:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{linenumbers}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align left
\begin_inset listings
inline false
status open

\begin_layout LyX-Code

import piston.handler
\end_layout

\begin_layout LyX-Code

import piston.utils
\end_layout

\begin_layout LyX-Code

import server.models
\end_layout

\begin_layout LyX-Code

import server.utils
\end_layout

\begin_layout LyX-Code

import server.common
\end_layout

\begin_layout LyX-Code

import rest.utils
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

class LocationPersonHandler(piston.handler.BaseHandler):
\end_layout

\begin_layout LyX-Code

    allowed_methods = ['GET','POST','PUT']
\end_layout

\begin_layout LyX-Code

    model = server.models.Location
\end_layout

\begin_layout LyX-Code

	fields = ("href","town","point","country","region",
\end_layout

\begin_layout LyX-Code

			  "subregion","days","label","street","postcode",
\end_layout

\begin_layout LyX-Code

              "offset","leaves", "recurs","georss_point")
\end_layout

\begin_layout LyX-Code

    
\end_layout

\begin_layout LyX-Code

    def read(self, request, username=None):
\end_layout

\begin_layout LyX-Code

        user = rest.utils.get_rest_user(request)
\end_layout

\begin_layout LyX-Code

        try:
\end_layout

\begin_layout LyX-Code

            if username:
\end_layout

\begin_layout LyX-Code

                person = server.models.Person.objects.get(username=username)
\end_layout

\begin_layout LyX-Code

                result = server.common.getPosition(user,person)
\end_layout

\begin_layout LyX-Code

                return rest.utils.extract_result_from_response(result)
\end_layout

\begin_layout LyX-Code

			else:
\end_layout

\begin_layout LyX-Code

            	return piston.utils.rc.NOT_FOUND
\end_layout

\begin_layout LyX-Code

        except server.models.Person.DoesNotExist:
\end_layout

\begin_layout LyX-Code

            return piston.utils.rc.NOT_FOUND
\end_layout

\begin_layout LyX-Code

        except server.models.Location.DoesNotExist:
\end_layout

\begin_layout LyX-Code

            return piston.utils.rc.NOT_FOUND
\end_layout

\begin_layout LyX-Code

       
\end_layout

\begin_layout LyX-Code

    
\end_layout

\begin_layout LyX-Code

    def create(self, request, username):
\end_layout

\begin_layout LyX-Code

        user = rest.utils.get_rest_user(request)
\end_layout

\begin_layout LyX-Code

        if user.username != username:
\end_layout

\begin_layout LyX-Code

            return piston.utils.rc.FORBIDDEN
\end_layout

\begin_layout LyX-Code

        data = request.data
\end_layout

\begin_layout LyX-Code

        location = server.models.Location()
\end_layout

\begin_layout LyX-Code

        dict_location = rest.utils.clean_ids(data)
\end_layout

\begin_layout LyX-Code

        location = rest.utils.populate_object_from_dictionary(location,
\end_layout

\begin_layout LyX-Code

				   dict_location)
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

        result = server.common.setPosition(user, location)
\end_layout

\begin_layout LyX-Code

        
\end_layout

\begin_layout LyX-Code

        if result.code == server.models.Response.CREATED:
\end_layout

\begin_layout LyX-Code

            result.value.href = rest.utils.get_href(request, 
\end_layout

\begin_layout LyX-Code

                             "location_person_handler", [user.username])
\end_layout

\begin_layout LyX-Code

            result.value.save()
\end_layout

\begin_layout LyX-Code

            return result.value
\end_layout

\begin_layout LyX-Code

        else:
\end_layout

\begin_layout LyX-Code

            return rest.utils.extract_result_from_response(result)       
 
\end_layout

\begin_layout LyX-Code

    
\end_layout

\begin_layout LyX-Code

    def update(self, request, username):
\end_layout

\begin_layout LyX-Code

        return self.create(request, username)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{linenumbers}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The class LocationPersonHandler extends BaseHandler defined by the Piston
 framework.
 The lines between 9 and 13 are instance variables for enabling/disabling
 HTTP methods, for setting the Django model to be mapped as REST resource
 and for choosing which model attributes to expose to the public.
 The methods defined afterwards are those that manage the HTTP requests
 according to their HTTP method:
\end_layout

\begin_layout Subparagraph
read() - lines 15 to 29
\end_layout

\begin_layout Standard
For handling HTTP GET requests.
 We retrieve the user doing the GET request in line 16.
 Then, according to the presence of the 
\emph on
username
\emph default
 parameter, we either return a HTTP 404 error code (wrapped inside the piston.uti
ls.rc.NOT_FOUND object) or we call the 
\emph on
server.common.getPosition()
\emph default
 function - presented in sub-section 6.4.1.
 We then quite-directly return the results of the function, using the helper
 function 
\emph on
rest.utils.extract_result_from_response()
\emph default
, since each function in the 
\emph on
server
\emph default
 package returns a Response object (discussed in section 6.3).
\end_layout

\begin_layout Subparagraph
create() - lines 32 to 48
\end_layout

\begin_layout Standard
For managing HTTP POST requests.
 As we do for the 
\emph on
read()
\emph default
 method, we retrieve the user doing the GET request, and return a HTTP 403
 Forbidden if the user trying to perform the operation is not the same user
 targeted for it.
 Then, in a similar way as we do for the 
\emph on
read()
\emph default
 method, we prepare the Location object with the data provided in the POST
 request (lines 34-38) and pass it to the 
\emph on
server.common.setPosition()
\emph default
 function.
 Again, we return to the client according to the Response object provided
 by the function.
 We populate the location's
\emph on
 href
\emph default
 attribute if the operation was successful.
\end_layout

\begin_layout Subparagraph
update() - lines 50 to 51
\end_layout

\begin_layout Standard
For handling HTTP PUT requests - in the current implementation, we just
 perform a call to the 
\emph on
create()
\emph default
 method.
\end_layout

\begin_layout Subparagraph
delete() - not in the example
\end_layout

\begin_layout Standard
For handling HTTP DELETE requests.
\end_layout

\begin_layout Paragraph
Summarizing
\end_layout

\begin_layout Standard
In this part we presented the technical outcomes of this dissertation, divided
 in three sections.
 In section 4, we gave an introduction of the Dycapo Project and the domain
 of interest of the architecture of the system.
 In section 5 we wrote about Dycapo Protocol, a REST-based protocol aiming
 to become a standard for the format and the transmission of data for dynamic
 carpooling services.
 In section 6 we presented Dycapo Server, a prototype system providing dynamic
 carpooling functionalities, implemented using Python programming language
 and demonstrating the use of the protocol.
 In the next part we will draw some conclusions and envision future work
 of the project.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Part
Conclusions and future work
\end_layout

\begin_layout Standard
In this dissertation we presented the outcomes of Dycapo, a project aimed
 at providing a better understanding and a technological solution to the
 open problem of dynamic carpooling.
 Through an analysis of the state of the art (reported in Part II), we identifie
d the key issues as well as the functional and non-functional requirements
 in the domain of dynamic carpooling.
 Based on the comparative analysis of the open issues, we noticed that the
 basic building block was missing: an open and extendable technological
 infrastructure.
 Hence we decided to focus on two key components: a protocol for dynamic
 carpooling services, and a server able to handle calls from clients using
 the protocol, both of them presented in Part III.
 Dycapo Protocol is an open REST-based protocol that aims to become the
 missing standard for the format and the transmission of data related to
 dynamic carpooling services.
 Dycapo Server is a prototype software written using Python programming
 language that provides an essential set of dynamic carpooling functionalitites,
 using Dycapo Protocol.
 Its aim is to become a solid base or an inspiration for the creation of
 full dynamic carpooling services, run by companies and organizations.
\end_layout

\begin_layout Standard
The domain of interest, dynamic carpooling, is quite complex as it is possible
 to notice from the UML diagrams we created: the entities involved are complex
 and relate each other in non-trivial ways.
 In fact, there is very little empirical research on the topic, mainly proposals
 about how a system should be.
 There are also few working systems, with very few users and moreover not
 open source so that it is not possible to study and extend them.
 It was not easy to come up with a reasonable and consistent set of requirements
 and entities, then modeled by UML diagrams, but we are confident that Dycapo
 protocol is a useful resource for the community that can be easily extended
 and built on.
\end_layout

\begin_layout Standard
The aim to become a world standard is a high target but not impossible.
 We targeted this goal by choosing an open development process: the code
 was released as open source since the very first days and the evolving
 discussion about the state of the art and the proposed protocol was carried
 on an open wiki at www.dycapo.org since the beginning of the project.
 This strategy already started to pay back.
 In fact, we  received many positive feedbacks from people related to the
 domain of interest.
 We have been contacted by the author of a paper analyzed, by many people
 involved in dynamic carpooling projects, some of them analyzed in the research
 phase and by local entrepreneurs.
 We have also received some proposals of joint ventures and protocol adoptions.
 There is also the possibility of a collaboration with MIT's Mobile Experience
 Laboratory, since there is a collaboration among FBK, where most of this
 work was done, and MIT.
 We have a first but empirical evidence about the quality of the protocol
 and how it is described: a University colleague is developing an Android
 client for Dycapo in the context of his bachelor thesis and he is able
 to figure out how the protocol should work mostly by looking at the public
 documentation.
\end_layout

\begin_layout Standard
Regarding future improvements, most of them are related to real world usage:
 we would like to test our system with real users.
 In this case, it would be very interesting to perform stress testing for
 understanding how the system can scale with many users and to extend some
 functionalities, for example a better handling of unforeseen situations.
 Many cases have already been covered by the testing framework we developed
 but obviously not all of them.
 Some possible inconsistencies in the protocol or in the server would be
 better spotted by real world usage and we really look forward for a deployment
 of Dycapo with real users.
 The develop of a feedback system would also be interesting: would users
 start to use it, it would be very important to give them the possibility
 to express how they felt about the ride when it is finished.
 Moreover, there would be a requirement for the addition of Geographic Informati
on Systems (GIS) and relative algorithms for the real-time matching of drivers
 and passengers.
\end_layout

\begin_layout Standard
Concluding, we believe the topic of this thesis is a recent and challenging
 one, still waiting for at least initial solutions and steps forwards.
 We are confident that our thesis was able to create some basic, open building
 blocks that others after us would be able to improve and extend with the
 common goal of solving an important problem for our world: too many cars
 on our streets with just one passenger in them.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
thispagestyle{empty}
\end_layout

\end_inset


\end_layout

\begin_layout Section
\start_of_appendix
Appendix: Comparative Analysis Outcomes
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="12" columns="4">
<features>
<column alignment="left" valignment="top" width="3cm">
<column alignment="left" valignment="top" width="4cm">
<column alignment="left" valignment="top" width="4cm">
<column alignment="left" valignment="top" width="4cm">
<row endhead="true">
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Paper
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Interface Design
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Algorithms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Coordination
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset citation
LatexCommand cite
key "key-3"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Give start, ending points and clear indications.
\end_layout

\begin_layout Plain Layout

\size footnotesize
Filter what information to reveal
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset citation
LatexCommand cite
key "key-4"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Provide lots of flexible settings to satisfy users.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Provide a static/dynamic approach, let users insert entries days before
 the start
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset citation
LatexCommand cite
key "key-5"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Provide different levels of services: 
\end_layout

\begin_layout Plain Layout

\size footnotesize
- simple: just destination and pickup 
\end_layout

\begin_layout Plain Layout

\size footnotesize
- groups preferences (only women etc.) 
\end_layout

\begin_layout Plain Layout

\size footnotesize
- scheduling of rides
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row newpage="true">
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset citation
LatexCommand cite
key "key-6"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset citation
LatexCommand cite
key "key-10"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Implement one-time registration process, simple.
\end_layout

\begin_layout Plain Layout

\size footnotesize
Provide RFID devices for drivers and passengers
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset citation
LatexCommand cite
key "key-0"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset citation
LatexCommand cite
key "key-11"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Focus on simplicity.
 Provide voice, speech recognition.
 Allow users to communicate each other.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Driving passenger away from the destination but near transportation locations
 (e.g.
 a bus station) increases quality of service and enhances coordination.
\end_layout

\end_inset
</cell>
</row>
<row newpage="true">
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset citation
LatexCommand cite
key "key-12"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Given, built around social connections.
 Social network needed.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Built around social connection between users
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset citation
LatexCommand cite
key "key-13"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Implement a simple registration system from mobile phone.
 
\end_layout

\begin_layout Plain Layout

\size footnotesize
In a second phase link social networks profiles, or manual fill.
\end_layout

\begin_layout Plain Layout

\size footnotesize
Develop a very simple UI
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset citation
LatexCommand cite
key "key-14"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Both data structures and Algorithms for matching are given
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset citation
LatexCommand cite
key "key-15"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Build it similar, simple and intuitive like Twitter.
 Use parameters like “where are you going?”.
\end_layout

\begin_layout Plain Layout

\size footnotesize
Car position is essential: drivers should get a message and just confirm
 or refuse a ride
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Use legal pick up points
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Paper Analysis: Interface Design, Algorithms, Coordination
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="9" columns="4">
<features>
<column alignment="left" valignment="top" width="3cm">
<column alignment="left" valignment="top" width="3cm">
<column alignment="left" valignment="top" width="3cm">
<column alignment="left" valignment="top" width="3cm">
<row endhead="true">
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Paper
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Trustiness
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Safety
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Social Aspects
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset citation
LatexCommand cite
key "key-3"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Authenticate before the match: password / PIN monitor arrival at destination
\end_layout

\begin_layout Plain Layout

\size footnotesize
Provide a feedback system a la EBay
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Announce matching items in profiles before the ride
\end_layout

\begin_layout Plain Layout

\size footnotesize
Do research in social capital aspects
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset citation
LatexCommand cite
key "key-4"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Create a PIN at registration phase to be used by the client
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Add social networking support to help finding neighbours
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset citation
LatexCommand cite
key "key-5"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Brand the idea: apply stickers on every car that participates.
 
\end_layout

\begin_layout Plain Layout

\size footnotesize
Give limitations to drivers: age limits, extra driving tests, check on criminal
 records etc.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Provide Auto Event Recorders on cars.
 Implement an emergency button on mobile phone, record GPS data.
\end_layout

\begin_layout Plain Layout

\size footnotesize
Provide a feedback system a la EBay
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset citation
LatexCommand cite
key "key-6"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row newpage="true">
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset citation
LatexCommand cite
key "key-10"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Record carpooling activity when cars pass through RFID readers 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Build it around RFID, record lots of data and positions
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset citation
LatexCommand cite
key "key-0"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Involve community and governments in planning and implementation phases
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Let the service be available only to registered users; Provide a Feedback
 system
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Give the possibility to create social connections
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset citation
LatexCommand cite
key "key-11"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Use RFID, GPS.
 Implement a complete rating system.
 
\end_layout

\begin_layout Plain Layout

\size footnotesize
Display vehicle and driver information before entering a vehicle.
 Display participants pictures.
 Assign random numbers for passenger pickups to confirm the ride.
 
\end_layout

\begin_layout Plain Layout

\size footnotesize
Provide voice and video features.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Match passengers socially.
\end_layout

\begin_layout Plain Layout

\size footnotesize
Link the application to social networks.
\end_layout

\end_inset
</cell>
</row>
<row newpage="true">
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset citation
LatexCommand cite
key "key-12"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Use social networks to enhance it.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Paper Analysis: Trustiness, Safety, Social Aspects Pt.
 1
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="4">
<features>
<column alignment="left" valignment="top" width="3cm">
<column alignment="left" valignment="top" width="3cm">
<column alignment="left" valignment="top" width="3cm">
<column alignment="left" valignment="top" width="3cm">
<row endhead="true">
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Paper
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Trustiness
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Safety
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Social Aspects
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset citation
LatexCommand cite
key "key-13"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
People are ready to spend 17% more time to pickup a friend of the social
 network rather than a stranger.
 Implement it.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Implement a rating system.
 Use and record GPS data.
\end_layout

\begin_layout Plain Layout

\size footnotesize
Do extra research in this field.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset citation
LatexCommand cite
key "key-14"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Use social networks to enhance it.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Implement a GPS Help button.
 Record time, place, and sound.
 Develop a Feedback system
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset citation
LatexCommand cite
key "key-15"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Market against negative prejudgments of people: ride-sharing is associated
 with unreliability, problems with passengers and crime.
\end_layout

\begin_layout Plain Layout

\size footnotesize
Use the survey provided.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Solve problems related to reliability, politeness and customs.
 
\end_layout

\begin_layout Plain Layout

\size footnotesize
Make people change mind about the dangers of carpooling.
 Implement a rating with rate of confirmed trip- requests, rate of canceled
 trips and time accuracy.
\end_layout

\begin_layout Plain Layout

\size footnotesize
Use RFID, GPS, Blue-tooth, event recorders and everything else you could
 add.
 Measure and record the speed of vehicles.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Paper Analysis: Trustiness, Safety, Social Aspects Pt.
 2
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="9" columns="4">
<features>
<column alignment="left" valignment="top" width="3cm">
<column alignment="left" valignment="top" width="3cm">
<column alignment="left" valignment="top" width="3cm">
<column alignment="left" valignment="top" width="3cm">
<row endhead="true">
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Paper
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Critical Mass
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Incentives
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Suggestions
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset citation
LatexCommand cite
key "key-3"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Provide a location-aware system
\end_layout

\begin_layout Plain Layout

\size footnotesize
Make use of mobile phones
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset citation
LatexCommand cite
key "key-4"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Provide mass marketing before, during and after deployment.
 Search for start-up incentives
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Search an institutional sponsor.
\end_layout

\begin_layout Plain Layout

\size footnotesize
Make the government provide parking spaces to participants
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Implement both Web and mobile clients.
\end_layout

\begin_layout Plain Layout

\size footnotesize
Implement a static and a dynamic approach.
 
\end_layout

\begin_layout Plain Layout

\size footnotesize
Start with a many-to-one system: all at a single destination
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset citation
LatexCommand cite
key "key-5"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Use a cooperative, public development of the system
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Implement a Web interface and mobile clients (using phone calls)
\end_layout

\end_inset
</cell>
</row>
<row newpage="true">
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset citation
LatexCommand cite
key "key-6"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset citation
LatexCommand cite
key "key-10"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Make employers incentive employees.
 Involve Regional Transportation Boards
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset citation
LatexCommand cite
key "key-0"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Create an incremental service, starting from a thread of backwards compatible
 services (bus, taxi).
 Don't introduce new devices for the service, use mobile phones
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Find a way to make the service a business case.
 Search for public incentives
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Implement the system mobile only.
 Record GPS data.
\end_layout

\begin_layout Plain Layout

\size footnotesize
Provide a non-obtrusive system for authentication Research on quality of
 service measures
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset citation
LatexCommand cite
key "key-11"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
A multi-hop system will solve the problem, as more rides will be available,
 waiting times will decrease and quality will rise.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Convince governments to change laws to enforce carpooling
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Use a dynamic, multi-hop, real- time mobile system to minimize waiting times,
 one hop at a time
\end_layout

\end_inset
</cell>
</row>
<row newpage="true">
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset citation
LatexCommand cite
key "key-12"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Use mobile phones and sms.
 Use GPS.
\end_layout

\begin_layout Plain Layout

\size footnotesize
Use a provided high-level description of the system
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Paper Analysis: Critical Mass, Incentives, Suggestions Pt.
 1
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="4">
<features>
<column alignment="left" valignment="top" width="3cm">
<column alignment="left" valignment="top" width="3cm">
<column alignment="left" valignment="top" width="3cm">
<column alignment="left" valignment="top" width="3cm">
<row endhead="true">
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Paper
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Critical Mass
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Incentives
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Suggestions
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset citation
LatexCommand cite
key "key-13"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Involve users in some parts of development process.
 Research further on this topic.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Implement a mobile and a web system that interacts with social networks
 profiles.
\end_layout

\begin_layout Plain Layout

\size footnotesize
Use Opensocial and other social networks.
\end_layout

\begin_layout Plain Layout

\size footnotesize
Use our high level description of the whole system
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset citation
LatexCommand cite
key "key-14"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Market-formation problem: discover a new, winning formula.
\end_layout

\begin_layout Plain Layout

\size footnotesize
Start with an existing service, like taxis.
\end_layout

\begin_layout Plain Layout

\size footnotesize
Find large employers.
\end_layout

\begin_layout Plain Layout

\size footnotesize
Serve events (i.e..
 concerts)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Find money.
 Search for incentives from governments
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Implement our Use Cases
\end_layout

\begin_layout Plain Layout

\size footnotesize
Provide our functional requirements.
 Provide our non-functional requirements
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset citation
LatexCommand cite
key "key-15"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Convince the user to use the system for the first time.
\end_layout

\begin_layout Plain Layout

\size footnotesize
Pay the user directly for the first N times of use.
\end_layout

\begin_layout Plain Layout

\size footnotesize
Integrate public transportation system.
 
\end_layout

\begin_layout Plain Layout

\size footnotesize
Implement the system first for an existing taxi network, and then private
 cars could participate.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Provide a free taxi of public transport ride in case of no return possibility.
 Include existing carsharing projects in the system startup.
 Create an own currency system to be converted in real money.
 Convince governments to adapt the laws for dynamic carpooling
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Implement a mobile, GPS, Multi-hop system
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Paper Analysis: Critical Mass, Incentives, Suggestions Pt.2
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Appendix: Dycapo Protocol
\end_layout

\begin_layout Standard
\begin_inset External
	template PDFPages
	filename Protocol - Dycapo Project.pdf
	extra LaTeX "pages=-"

\end_inset

\SpecialChar \-
\SpecialChar \-
\SpecialChar \-

\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
thispagestyle{empty}
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "1"
key "key-6"

\end_inset

 Abdel-Naby, S., Fante, S.: Auctions negotiation for mobile rideshare service.
 In Proc.
 IEEE Second International Conference on Pervasive Computing and Applications
 (2007)
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "2"
key "key-2"

\end_inset

Davis, A.
 Operational prototyping: a new development approach.
 Software, IEEE 9, 5 (1992)
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "3"
key "key-1"

\end_inset

Fielding, R.
 T.
 Architectural styles and the design of network-based software architectures.
 PhD thesis, University of California, Irvine (2000)
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "3"
key "key-18"

\end_inset

Fielding, R., Gettys, J., Mogul, J., Frystyk, H., Masinter, L., Leach, P., and
 Berners-Lee, T.
 RFC2616: hypertext transfer Protocol-HTTP/1.1.
 RFC Editor United States (1999).
 
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "4"
key "key-12"

\end_inset

 Gidófalvi, G.
 et al.
 Instant Social Ride-Sharing.
 In Proc.
 15th World Congress on Intelligent Transport Systems, p 8, Intelligent
 Transportation Society of America (2008)
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "5"
key "key-11"

\end_inset

 Gruebele, P.A., Interactive System for Real Time Dynamic Multi-hop Carpooling.
 Global Transport Knowledge Partnership (2008).
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "6"
key "key-0"

\end_inset

Hartwig, S., Buchmann, M.: Empty seats traveling: Next-generation ridesharing
 and its potential to mitigate traffic and emission problems in the 21st
 century.
 Technical report, Nokia (2007), http://research.nokia.com/tr/NRC-TR-2007-003.pdf
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "7"
key "key-10"

\end_inset

 Kelley, K.
 L.
 Casual Carpooling-Enhanced.
 Journal of Public Transportation 10, 4 (2007), 119.
 
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "8"
key "key-4"

\end_inset

Kirshner, D.
 Pilot Tests of Dynamic Ridesharing.
 Technical report (2006), http://www.ridenow.org/ridenow_summary.html
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "9"
key "key-14"

\end_inset

 Morris, J.
 et.
 al.
 SafeRide: Reducing Single Occupancy Vehicles.
 Technical report (2008), http://www.cs.cmu.edu/~jhm/SafeRide.pdf
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "10"
key "key-5"

\end_inset

Murphy, P.: The smart jitney: Rapid, realistic transport.
 New Solutions Journal (4) (2007)
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "11"
key "key-3"

\end_inset

Resnick, P.
 SocioTechnical support for ride sharing.
 In Working Notes of the Symposium on Crossing Disciplinary Boundaries in
 the Urban and Regional Contex (UTEP-03) (2006).
 
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "12"
key "key-13"

\end_inset

Wessels, R.
 Combining Ridesharing & Social Networks.
 Technical report (2009), http://www.aida.utwente.nl/education/ITS2-RW-Pooll.pdf
 
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "13"
key "key-15"

\end_inset

 Zimmermann, H., and Stempfel, Y.
 Current Trends in Dynamic Ridesharing, identification of Bottleneck Problems
 and Propositions of Solutions.
 Indian Institute of Technology Delhi, India.
 (2008), http://dynamicridesharing.org/~dynami11/wiki/images/9/95/IIT_Delhi_-_Dyn
amic_Ridesharing.PDF
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
thispagestyle{empty}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center
Dedicated to My Family.
 
\end_layout

\end_body
\end_document
